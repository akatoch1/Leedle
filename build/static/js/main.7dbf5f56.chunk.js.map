{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Topic/topic.js","components/Comments/index.js","components/Landing/index.js","constants/routes.js","components/SignUp/index.js","components/SignIn/index.js","components/Home/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","app","initializeApp","this","auth","db","database","SignOut","props","console","log","type","onClick","firebase","signOut","MyButton","styled","Button","background","border","borderRadius","boxShadow","color","height","padding","INITIAL_STATE","topic","clicked","TopicPage","onSubmit","event","preventDefault","state","ref","user","displayName","push","setState","onChange","target","name","value","TextField","id","align","placeholder","Component","Topic","Consumer","Comments","comment","comments","on","ss","data","val","topicIds","Object","keys","map","u","snapshot","d","anId","key","Channel","top","LandingDisplay","onButtonClick","t","click","chosen","onHome","topics","users","to","Landing","email","password","error","SignUpForm","createUserWithEmailAndPassword","then","result","updateProfile","catch","document","querySelector","innerText","message","SignUpPage","SignInForm","signInWithEmailAndPassword","error_msg","SignInPage","Home","Admin","Apps","channels","onAuthStateChanged","exact","path","render","component","SignIn","HomePage","AdminPage","App","ReactDOM","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dbf5f56.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nconst FirebaseContext = React.createContext(null);\nexport default FirebaseContext;","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst config = {\n    /*apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,*/\n    apiKey: \"AIzaSyDG5V5TbBUBubeLLGZPFkxVuZfiQP6ffoo\",\n    authDomain: \"reddit-8b4b4.firebaseapp.com\",\n    databaseURL: \"https://reddit-8b4b4.firebaseio.com/\",\n    projectId: \"reddit-8b4b4\",\n    storageBucket: \"gs://reddit-8b4b4.appspot.com\",\n    messagingSenderId: 404557240002,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n}\n\nexport default Firebase;","import FirebaseContext from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext };","import React, { Component } from 'react'\nimport firebase from \"firebase\"\nconst SignOut = (props) => (\n<div>\n{console.log(props)}\n<button\n    type=\"button\"\n    onClick={() => firebase.auth().signOut()}\n  > Sign Out </button>\n</div>\n);\n\n\n\nexport default SignOut;","import React, { Component } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst Topic = (props) => (\n    <div>\n        <FirebaseContext.Consumer>\n          {firebase => <TopicPage firebase={firebase} user={props.user}/>}\n        </FirebaseContext.Consumer>\n    </div>\n    );\n\nconst MyButton = styled(Button)({\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 10,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n});\n\nconst INITIAL_STATE = {\n    topic: '', \n    clicked: false\n    };\nclass TopicPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n        const {topic} = this.state;\n        let thedb = this.props.firebase.db;\n        thedb.ref(\"/topics/\" + this.props.user.displayName).push(topic);\n        this.setState({clicked: false});\n    }\n    onClick = event => {\n        event.preventDefault();\n        this.setState({clicked: true})\n        //thedb.ref(\"/users\").child(email).set(password); writing to database\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    render() {\n        const {\n            topic,\n            clicked\n        } = this.state;\n        if (clicked == true) {\n            return (\n            <form onSubmit={this.onSubmit}>\n            <TextField\n            id = \"outlined-multiline-static\"\n            name=\"topic\"\n            align = \"middle\"\n            value={topic}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Topic\"\n            />\n            <div id = \"post\">\n            <button type = \"submit\">Post</button>\n            </div>\n            </form>);\n        }\n        else {\n            return (\n                this.props.user?\n                <div id = \"create\">\n                <MyButton type = \"submit\" onClick = {this.onClick}>Create</MyButton>\n                </div>\n                :\n                null\n            );\n        }\n    }\n}\n\nexport default Topic;","import React, { Component } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Channel = (props) => (\n    \n    <div>\n        <FirebaseContext.Consumer>\n          {firebase => <Comments firebase={firebase} user={props.user} topic = {props.topic}/>}\n        </FirebaseContext.Consumer>\n    </div>\n);\n\nclass Comments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n            comments: [],\n            comment: ''\n        }\n    }\n\n    componentDidMount() {\n        let topicsRef = this.props.firebase.db.ref(this.props.topic);\n        topicsRef.on(\"value\", ss=>{\n            let data = ss.val();\n            let topicIds = Object.keys(data);\n            var comments = [];\n            \n            topicIds.map(u => {\n                let topicsRef2 = this.props.firebase.db.ref(this.props.topic + \"/\" + u);\n                topicsRef2.on(\"value\", snapshot=> {\n                    let d = snapshot.val();\n                    let topicIds2 = Object.keys(d);\n                    topicIds2.map(anId=>{\n                        comments.push([u, d[anId]]);\n                    });\n                }\n                )\n            }\n            )\n            this.setState({comments: comments});\n            //this.setState({users: users});\n        });\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n        const {comment} = this.state;\n        let thedb = this.props.firebase.db;\n        thedb.ref(this.props.topic + \"/\" + this.props.user.displayName).push(comment);\n        this.setState({ comment: '' });\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            comment\n        } = this.state;\n        return(\n            this.props.user ?\n            <form onSubmit={this.onSubmit}>\n            <div id = \"comment\">\n            {this.state.comments.map(topic=>{\n                return (<h1  key={topic}>{topic[0]}: {topic[1]}</h1>);\n            })} \n            <TextField\n            id = \"outlined-multiline-static\"\n            name=\"comment\"\n            align = \"middle\"\n            value={comment}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Add a comment\"\n            />\n            <button onClick = {this.onClick}>Add</button>\n            </div>\n            </form>\n            :\n            <div id = \"comment\">\n            {this.state.comments.map(topic=>{\n                return (<h1  key={topic}>{topic[0]}: {topic[1]}</h1>);\n            })} \n            </div>\n        )\n    }\n\n}\n\nexport default Channel","import React, { Component } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Link, Redirect } from 'react-router-dom';\nimport SignOut from '../SignOut';\nimport Topic from '../Topic/topic';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Channel from '../Comments'\n\n\nconst Landing = (props) => (\n<div id=\"landing\">\n<FirebaseContext.Consumer>\n      {firebase => <LandingDisplay firebase={firebase} user={props.user}/>}\n</FirebaseContext.Consumer>\n\n</div>\n);\n\nconst MyButton = styled(Button)({\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    top: '20px'\n  });\n\nclass LandingDisplay extends Component {\n    constructor(props) {\n        \n        super(props);\n        this.state = {\n            topics: [],\n            users: [],\n            click: false,\n            chosen: ''\n        };\n        \n    }\n    \n\n    onButtonClick = (t) => {\n        this.setState({click: true});\n        this.setState({chosen: t});\n    }\n\n    onHome = event => {\n        this.setState({click: false});\n    }\n\n    componentDidMount() {\n        \n        let topicsRef = this.props.firebase.db.ref(\"/topics/\");\n        topicsRef.on(\"value\", ss=>{\n            let data = ss.val();\n            let topicIds = Object.keys(data);\n            let topics = [];\n            topicIds.map(u => {\n                let topicsRef2 = this.props.firebase.db.ref(\"topics/\" + u);\n                topicsRef2.on(\"value\", snapshot=> {\n                    let d = snapshot.val();\n                    let topicIds2 = Object.keys(d);\n                    topicIds2.map(anId=>{\n                        topics.push([u, d[anId]]);\n                    });\n                }\n                )\n            }\n            )\n            this.setState({topics: topics});\n            //this.setState({users: users});\n        });\n    }\n    \n    render(){\n        \n        const {\n            topics,\n            click,\n            users\n        } = this.state;\n        if (click == true) {\n            return (\n                this.props.user ?\n                <div>\n                <h1>Leedle</h1>\n                <SignOut {...this.props} user={this.props.user}/>\n                <Topic {...this.props} user={this.props.user} />\n                <Channel {...this.props} user = {this.props.user} topic = {this.state.chosen}/> \n                </div>\n                :\n                <div>\n                <h1>Leedle</h1>\n                <ul>\n                    <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n                </ul>\n                <ul>\n                    <Link to={ROUTES.SIGN_UP}> Sign Up</Link>\n                </ul>\n                <button type = \"submit\" onClick = {this.onHome}>Home</button>\n                <Channel {...this.props} user = {this.props.user} topic = {this.state.chosen}/>\n                </div>\n            )\n        }\n        else {\n            return (\n                this.props.user ?\n                <div>\n                <h1>Leedle</h1>\n                <SignOut {...this.props} user={this.props.user}/>\n                <Topic {...this.props} user={this.props.user} />\n                <div id = \"topic\">\n                {this.state.topics.map(topic=>{\n                        return (<MyButton onClick = {() => this.onButtonClick(topic[1])} key={topic}>Created by: {topic[0]} {topic[1]}</MyButton>);\n                    })} \n                </div>\n                </div>\n                :\n                <div>\n                <h1>Leedle</h1>\n                <ul>\n                    <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n                </ul>\n                <ul>\n                    <Link to={ROUTES.SIGN_UP}> Sign Up</Link>\n                </ul>\n                <div id = \"topic\">\n                {this.state.topics.map(topic=>{\n                        return (<MyButton onClick = {() => this.onButtonClick(topic[1])} key={topic}>Created by: {topic[0]} {topic[1]}</MyButton>);\n                    })} \n                </div>\n                <button type = \"submit\" onClick = {this.onHome}>Home</button>\n                <Topic {...this.props} user={this.props.user}/>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Landing;","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ADMIN = '/admin';\nexport const SIGN_OUT = '/signout';\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FirebaseContext } from '../Firebase';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n<div>\n    <h1>SignUp</h1>\n    <FirebaseContext.Consumer>\n      {firebase => <SignUpForm firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    name: '',\n    error: null,\n  };\n\nclass SignUpForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {...INITIAL_STATE};\n    }\n    onSubmit = event => {\n        event.preventDefault();\n        const { email, password,name, error } = this.state;\n        let thedb = this.props.firebase.db;\n        this.props.firebase.auth.createUserWithEmailAndPassword(email, password)\n        .then(function(result) {\n          return result.user.updateProfile({\n            displayName: name\n          })\n        })\n        .catch(function(error) {\n          // Handle Errors here.\n          var e = document.querySelector(\"#error\");\n          e.innerText = error.message;\n          // ...\n        });\n        //thedb.ref(\"/users\").child(email).set(password); writing to database\n        this.setState({ ...INITIAL_STATE });\n        return false;\n    }\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    render() {\n        const {\n            email,\n            password,\n            name,\n            error,\n        } = this.state;\n      return (\n        <form onSubmit={this.onSubmit}>\n        <input\n          name=\"name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\">Sign Up</button>\n        <div id = \"error\"></div>\n      </form>\n      );\n    }\n  }\n\n  \n  \n\n\n  const SignUpLink = () => (\n    <p>\n      Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n  );\n  export default SignUpPage;\n  export { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst SignInPage = (props) => (\n    <div>\n        <h1>SignIn</h1>\n        <FirebaseContext.Consumer>\n          {firebase => <SignInForm firebase={firebase} user={props.user} />}\n        </FirebaseContext.Consumer>\n      </div>\n    );\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n  };\nclass SignInForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {...INITIAL_STATE};\n    }\n    onSubmit = event => {\n        event.preventDefault();\n        const { email, password, error } = this.state;\n        this.props.firebase.auth.signInWithEmailAndPassword(email, password).then(() =>{\n            this.setState({ ...INITIAL_STATE });\n\n        }\n        ).catch(error => {\n            this.setState({error_msg: error});\n        });\n        return false;\n    }\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    render() {\n        const {\n            email,\n            password,\n            error,\n        } = this.state;\n        return (\n        this.props.user ? \n        (<Redirect to={ROUTES.LANDING}/>)\n        :\n        <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\">Sign In</button>\n        {error && <p>{error.message}</p>}\n      </form> \n      );\n    }\n  }\n\nexport default SignInPage;","import React from 'react'\n\nconst Home = () => (\n<div>\n<h1>Home</h1>\n</div>\n);\n\nexport default Home;","import React from 'react'\n\nconst Admin = () => (\n<div>\n<h1>Admin</h1>\n</div>\n);\n\nexport default Admin;","import React, { Component } from 'react';\n//import 'typeface-roboto';\n//import Button from '@material-ui/core/Button';\n//import Drawer from '@material-ui/core/Drawer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\nimport AdminPage from '../Admin';\nimport * as ROUTES from '../../constants/routes';\nimport { FirebaseContext } from '../Firebase';\nimport SignOut from '../SignOut';\n\nconst App = () => (\n  <div>\n      <FirebaseContext.Consumer>\n        {firebase => <Apps firebase={firebase} />}\n      </FirebaseContext.Consumer>\n    </div>\n  );\n\nclass Apps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null, \n      channels: []\n    }\n    \n  }\n  componentDidMount() {\n    this.props.firebase.auth.onAuthStateChanged( u => {\n      if (u) {\n        this.setState({user: u});\n      } else {\n        this.setState({user: null});\n      }\n    });\n    \n  }\n  render() {\n    return (<Router>\n    <div>\n      <hr />\n      <Switch>\n        \n        <Route exact path={ROUTES.LANDING} render = {(props) => <LandingPage {...props} user={this.state.user}/>} />\n        <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route path={ROUTES.SIGN_IN} render = {(props) => <SignInPage {...props} user={this.state.user}/>} />\n        <Route path={ROUTES.SIGN_IN} render = {(props) => <SignInPage {...props} user={this.state.user}/>} />\n        <Route path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.ADMIN} component={AdminPage} /> \n        <Route path={ROUTES.SIGN_OUT}  render = {(props) => <SignOut {...props}/>} />\n      </Switch>\n      \n    </div>\n  </Router>)\n  }\n}; \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  \n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n    \n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}